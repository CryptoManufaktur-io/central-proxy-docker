x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  prometheus:
    restart: "unless-stopped"
    build:
      context: ./prometheus
    image: prometheus:vd-local
    user: root
    pull_policy: never
    volumes:
      - prom-data:/prometheus
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./prometheus/conf.d/:/etc/prometheus/conf.d/:ro
      - ./prometheus/custom-prom.yml:/etc/prometheus/custom-prom.yml:ro
    command:
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=40d
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --log.level=${LOG_LEVEL:-info}
    <<: *logging
    extra_hosts:  # So we can scrape node-exporter
      - "host.docker.internal:host-gateway"
    depends_on:
      - node-exporter
      - cadvisor
    labels:
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=9090
      - metrics.instance=prometheus
      - metrics.network=all

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run|var/lib/docker/.+)($$|/)'
      - '--no-collector.ipvs'
      - '--collector.textfile.directory=${NODE_EXPORTER_COLLECTOR_MOUNT_PATH:-/home/}'
      - '--collector.netdev.device-exclude=^(veth.*|docker.*|br-.*)$'
      - '--web.listen-address=0.0.0.0:${NODE_EXPORTER_PORT:-9199}'
    pid: host
    network_mode: host  # See all network interfaces
    restart: unless-stopped
    environment:
      - NODE_EXPORTER_COLLECTOR_MOUNT_PATH=${NODE_EXPORTER_COLLECTOR_MOUNT_PATH:-/dev/null}
    volumes:
      - /:/host:ro,rslave
      - /etc/hostname:/etc/nodename:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/localtime:/etc/localtime:ro
      - ${NODE_EXPORTER_COLLECTOR_MOUNT_PATH:-/dev/null}:${NODE_EXPORTER_COLLECTOR_MOUNT_PATH:-/dev/null}:ro
    labels:
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.host=host.docker.internal
      - metrics.port=${NODE_EXPORTER_PORT:-9199}
    <<: *logging

  cadvisor:
    restart: unless-stopped
    image: gcr.io/cadvisor/cadvisor:v0.49.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro,rslave
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro,rslave
    command:
      - --docker_only
    labels:
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=8080
    <<: *logging

  disk-monitor:
    image: disk-monitor:local
    pull_policy: never
    build:
      context: ./disk-monitor
    restart: unless-stopped
    <<: *logging
    # Access to raw block devices
    privileged: true
    volumes:
      - /dev:/dev:ro
    command: ["python3", "disk-monitor.py", "--interval-seconds", "60"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/metrics"]
      interval: 60s
      timeout: 5s
      retries: 3
    labels:
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=8000

  cmf_docker_metrics:
    image: ghcr.io/cryptomanufaktur-io/cmf-docker-metrics:main
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=9090
    <<: *logging

volumes:
  prom-data:
